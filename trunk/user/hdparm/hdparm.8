.TH HDPARM 8 "October 2018" "Version 9.58"

.SH NAME
hdparm \- get/set SATA/IDE device parameters
.SH SYNOPSIS
.B hdparm
[options] [device ...]
.SH DESCRIPTION
.BI hdparm
provides a command line interface to various kernel interfaces
supported by the Linux SATA/PATA/SAS "libata" subsystem
and the older IDE driver subsystem.  Many newer (2008 and later)
USB drive enclosures now also support "SAT" (SCSI-ATA Command Translation)
and therefore may also work with hdparm.  E.g. recent WD "Passport" models
and recent NexStar-3 enclosures.
Some options may work correctly only with the latest kernels.
.SH OPTIONS
When no options are given,
.B -acdgkmur
is assumed.
For "Get/set" options, a query without the optional parameter (e.g. \-d) will query (get)
the device state, and with a parameter (e.g., \-d0) will set the device state.
.TP
.I -a 
Get/set sector count for filesystem (software) read-ahead.
This is used to improve performance in sequential reads of large files,
by prefetching additional
blocks in anticipation of them being needed by the running task.
Many IDE drives also have a separate built-in read-ahead function,
which augments this filesystem (software) read-ahead function.
.TP
.I -A
Get/set the IDE drive\'s read-lookahead feature (usually ON by default).
Usage:
.B -A0
(disable) or
.B -A1
(enable).
.TP
.I -b
Get/set bus state.
.TP
.I -B
Get/set Advanced Power Management feature, if the drive supports it. A low value
means aggressive power management and a high value means better performance.
Possible settings range from values 1 through 127 (which permit spin-down),
and values 128 through 254 (which do not permit spin-down).
The highest degree of power management is attained with a setting of 1,
and the highest I/O performance with a setting of 254.
A value of 255 tells hdparm to disable Advanced Power Management altogether
on the drive (not all drives support disabling it, but most do).
.TP
.I -c
Get/set (E)IDE 32-bit I/O support.  A numeric parameter can be
used to enable/disable 32-bit I/O support.
Currently supported values include
.B 0
to disable 32-bit I/O support,
.B 1
to enable 32-bit data transfers, and
.B 3
to enable 32-bit data transfers with a special
.B sync
sequence required by many chipsets.  The value
.B 3
works with nearly all
32-bit IDE chipsets, but incurs slightly more overhead.
Note that "32-bit" refers to data transfers across a PCI or VLB bus to the
interface card only; all (E)IDE drives still have only a 16-bit connection
over the ribbon cable from the interface card.
.TP
.I -C
Check the current IDE power mode status, which will always be one of
.B unknown
(drive does not support this command),
Display terse usage info for all of the \--security-* options.
.TP
.I --security-freeze             
Freeze the drive\'s security settings.
The drive does not accept any security commands until next power-on reset.
Use this function in combination with \--security-unlock to protect drive
from any attempt to set a new password. Can be used standalone, too.
No other options are permitted on the command line with this one.
.TP
.I --security-prompt-for-password
Prompt for the --security PWD rather than getting from the command line args.
This avoids having passwords show up in shell history or in /proc/self/cmdline during execution.
.TP
.I --security-unlock PWD 
Unlock the drive, using password PWD.
Password is given as an ASCII string and is padded with NULs to reach 32 bytes.
The applicable drive password is selected with the \--user-master switch
(default is "user" password).
No other options are permitted on the command line with this one.
.TP
.I --security-set-pass PWD 
Lock the drive, using password PWD (Set Password)
.B (DANGEROUS).
Password is given as an ASCII string and is padded with NULs to reach 32 bytes.
Use the special password
.B NULL
to set an empty password.
The applicable drive password is selected with the \--user-master switch
(default is "user" password)
and the applicable security mode with the \--security-mode switch.
No other options are permitted on the command line with this one.
.TP
.I --security-disable PWD 
Disable drive locking, using password PWD.
Password is given as an ASCII string and is padded with NULs to reach 32 bytes.
The applicable drive password is selected with the \--user-master switch
(default is "user" password).
No other options are permitted on the command line with this one.
.TP
.I --security-erase PWD
Erase (locked) drive, using password PWD
.B (DANGEROUS).
Password is given as an ASCII string and is padded with NULs to reach 32 bytes.
Use the special password
.B NULL
to represent an empty password.
The applicable drive password is selected with the \--user-master switch
(default is "user" password).
No other options are permitted on the command line with this one.
.TP
.I --security-erase-enhanced PWD
Enhanced erase (locked) drive, using password PWD
.B (DANGEROUS).
Password is given as an ASCII string and is padded with NULs to reach 32 bytes.
The applicable drive password is selected with the \--user-master switch
(default is "user" password).
No other options are permitted on the command line with this one.
.TP
.I --user-master USER
Specifies which password (user/master) to select.
.B Defaults to "user" password.
Only useful in combination with \--security-unlock, \--security-set-pass,
\--security-disable, \--security-erase or \--security-erase-enhanced.
        u       user password
        m       master password

.TP
.I --security-mode MODE 
Specifies which security mode (high/maximum) to set.
.B Defaults to high.
Only useful in combination with \--security-set-pass.
        h       high security
        m       maximum security

.B THIS FEATURE IS EXPERIMENTAL AND NOT WELL TESTED. USE AT YOUR OWN RISK.
.SH FILES
/etc/hdparm.conf
.SH BUGS
As noted above, the
.B -m sectcount
and
.B -u 1
options should be used with caution at first, preferably on a
read-only filesystem.  Most drives work well with these features, but
a few drive/controller combinations are not 100% compatible.  Filesystem
corruption may result.  Backup everything before experimenting!
.PP
Some options (e.g. \-r for SCSI) may not work with old kernels as 
necessary ioctl()\'s were not supported.
.PP
Although this utility is intended primarily for use with SATA/IDE hard disk
devices, several of the options are also valid (and permitted) for use with 
SCSI hard disk devices and MFM/RLL hard disks with XT interfaces.
.PP
The Linux kernel up until 2.6.12 (and probably later) doesn\'t handle the
security unlock and disable commands gracefully and will segfault and in some
cases even panic. The security commands however might indeed have been executed
by the drive. This poor kernel behaviour makes the PIO data security commands
rather useless at the moment.
.PP
Note that the "security erase" and "security disable" commands have been
implemented as two consecutive PIO data commands and will not succeed on a
locked drive because the second command will not be issued after the segfault.
See the code for hints how patch it to work around this problem. Despite the
segfault it is often still possible to run two instances of hdparm
consecutively and issue the two necessary commands that way.
.SH AUTHOR
.B hdparm
has been written by Mark Lord <mlord@pobox.com>, the original primary
developer and maintainer of the (E)IDE driver for Linux, and current contributor
to the libata subsystem, along with suggestions and patches from many netfolk.
.PP
The disable Seagate auto-powersaving code
is courtesy of Tomi Leppikangas(tomilepp@paju.oulu.fi).
.PP
Security freeze command by Benjamin Benz, 2005.
.PP
PIO data out security commands by Leonard den Ottolander, 2005.
Some other parts by Benjamin Benz and others.
.SH SEE ALSO
.B http://www.t13.org/
Technical Committee T13 AT Attachment (ATA/ATAPI) Interface.
.PP
.B http://www.serialata.org/
Serial ATA International Organization.
.PP
.B http://www.compactflash.org/
CompactFlash Association.
